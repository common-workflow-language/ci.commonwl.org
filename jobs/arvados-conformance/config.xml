<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>&lt;p&gt;Testing the &lt;a href=&quot;https://arvados.org/&quot;&gt;Arvados Project&apos;s&lt;/a&gt; Core Platform workflow executor&#xd;
against the &lt;a href=&quot;https://github.com/common-workflow-language/common-workflow-language/blob/master/CONFORMANCE_TESTS.md#common-workflow-language-conformance-test-suite&quot;&gt;&#xd;
  CWL v1.0 conformance suite&lt;/a&gt;.&lt;/p&gt;&#xd;
&lt;p&gt;&lt;a href=&apos;https://ci.commonwl.org/job/arvados-conformance&apos;&gt;&lt;img src=&apos;https://ci.commonwl.org/buildStatus/icon?job=arvados-conformance&apos;&gt;&lt;/a&gt;&lt;/p&gt;&#xd;
&lt;img src=&quot;https://arvados.org/images/img01.png&quot; /&gt;&#xd;
&lt;p&gt;The Arvados core is a platform for production data science with very large data sets. It is made up of two major systems and a number of related services and components including APIs, SDKs, and visual tools.&lt;/p&gt;&#xd;
&#xd;
&#xd;
&#xd;
</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty plugin="build-failure-analyzer@1.19.2">
      <doNotScan>false</doNotScan>
    </com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.29.0">
      <projectUrl>https://github.com/curoverse/arvados/</projectUrl>
      <displayName></displayName>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.28">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>10</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.9.0">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://github.com/curoverse/arvados.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <assignedNode>linux</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <jenkins.triggers.ReverseBuildTrigger>
      <spec></spec>
      <upstreamProjects>cwl-website</upstreamProjects>
      <threshold>
        <name>SUCCESS</name>
        <ordinal>0</ordinal>
        <color>BLUE</color>
        <completeBuild>true</completeBuild>
      </threshold>
    </jenkins.triggers.ReverseBuildTrigger>
    <org.jenkinsci.plugins.registry.notification.DockerHubTrigger plugin="dockerhub-notification@2.2.1">
      <spec></spec>
      <options class="vector">
        <org.jenkinsci.plugins.registry.notification.opt.impl.TriggerOnSpecifiedImageNames>
          <repoNames>
            <string>arvados/arvbox-demo</string>
          </repoNames>
        </org.jenkinsci.plugins.registry.notification.opt.impl.TriggerOnSpecifiedImageNames>
      </options>
    </org.jenkinsci.plugins.registry.notification.DockerHubTrigger>
    <hudson.triggers.SCMTrigger>
      <spec>@daily</spec>
      <ignorePostCommitHooks>false</ignorePostCommitHooks>
    </hudson.triggers.SCMTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>whoami
cloneorpull() {
        if test -d $1 ; then
                (cd $1 &amp;&amp; git pull)
        else
                git clone $2
        fi
}
venv() {
        if ! test -d $1 ; then
                virtualenv $1
        fi
        . $1/bin/activate
}
#docker volume ls -qf dangling=true | grep -v metadata.db | xargs -r docker volume rm || true
cloneorpull common-workflow-language https://github.com/common-workflow-language/common-workflow-language.git
docker pull arvados/arvbox-demo:latest
set +e
sdk/cwl/test_with_arvbox.sh --config localdemo --leave-running \
	--junit-xml=/tmp/junit.xml  # -j$(($(nproc) / 2)
CODE=$?
docker exec cwltest cat /tmp/junit.xml &gt; junit.xml
arvbox reset -f
#docker volume ls -qf dangling=true | grep -v metadata.db | xargs -r docker volume rm || true
#docker rmi $(docker images -a --no-trunc | grep &quot;^arvados/arvbox-demo&quot; | grep -v &quot;latest&quot; | sed &apos;s/  */ /g&apos; | cut -d&apos; &apos; -f3) || true

# Instead of exiting with $CODE, test if junit.xml 
# file exists and is size &gt; 0
test -s junit.xml</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.junit.JUnitResultArchiver plugin="junit@1.24">
      <testResults>junit.xml</testResults>
      <keepLongStdio>false</keepLongStdio>
      <healthScaleFactor>1.0</healthScaleFactor>
      <allowEmptyResults>false</allowEmptyResults>
    </hudson.tasks.junit.JUnitResultArchiver>
  </publishers>
  <buildWrappers>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper plugin="build-timeout@1.19">
      <strategy class="hudson.plugins.build_timeout.impl.ElasticTimeOutStrategy">
        <timeoutPercentage>150</timeoutPercentage>
        <numberOfBuilds>5</numberOfBuilds>
        <failSafeTimeoutDuration>true</failSafeTimeoutDuration>
        <timeoutMinutesElasticDefault>120</timeoutMinutesElasticDefault>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
          <description>Build aborted, took longer than {0} minutes.</description>
        </hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
        <hudson.plugins.build__timeout.operations.AbortOperation/>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>