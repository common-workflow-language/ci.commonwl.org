<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty plugin="build-failure-analyzer@1.19.2">
      <doNotScan>false</doNotScan>
    </com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.29.0">
      <projectUrl>https://github.com/broadinstitute/cromwell/</projectUrl>
      <displayName></displayName>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.28">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.8.0">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://github.com/broadinstitute/cromwell.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/develop</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <assignedNode>linux</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <jenkins.triggers.ReverseBuildTrigger>
      <spec></spec>
      <upstreamProjects>cwl-website</upstreamProjects>
      <threshold>
        <name>SUCCESS</name>
        <ordinal>0</ordinal>
        <color>BLUE</color>
        <completeBuild>true</completeBuild>
      </threshold>
    </jenkins.triggers.ReverseBuildTrigger>
    <hudson.triggers.SCMTrigger>
      <spec>@daily</spec>
      <ignorePostCommitHooks>false</ignorePostCommitHooks>
    </hudson.triggers.SCMTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>cloneorpull() {
        if test -d $1 ; then
        		rm -r $1 || /bin/true
        fi
        git clone $2
}
venv() {
        if ! test -d $1 ; then
                virtualenv $1
        fi
        . $1/bin/activate
}
# hack for root owned files leaking from Cromwell
if [ -d &quot;$PWD/common-workflow-language&quot; ];
then
	docker run --mount type=bind,source=$PWD/common-workflow-language,destination=/cwl debian:latest rm -Rf /cwl/v1.0
fi
cloneorpull common-workflow-language https://github.com/common-workflow-language/common-workflow-language.git
venv venv
(. venv/bin/activate &amp;&amp; pip install -U setuptools wheel pip)
(. venv/bin/activate &amp;&amp; pip install -U &quot;cwltest&gt;=1.0.20180503153209&quot; cwltool)
sbt clean assembly
CROMWELL_JAR=$(find &quot;$(pwd)/server/target/scala-2.12&quot; -name &quot;cromwell-*.jar&quot;)
shutdownCromwell() {
    if [ -z &quot;${CROMWELL_PID}&quot; ]; then
        kill ${CROMWELL_PID}
    fi
}
trap &quot;shutdownCromwell&quot; EXIT

CURRENT_DIR=$(pwd)
cd common-workflow-language/v1.0/v1.0
java -Dsystem.new-workflow-poll-rate=1 \
	-Dbackend.providers.Local.config.script-epilogue=&quot;sleep 5 &amp;&amp; sync&quot; \
    -jar ${CROMWELL_JAR} server &amp;
CROMWELL_PID=$$

sleep 10

cd $CURRENT_DIR
(. venv/bin/activate &amp;&amp; cd common-workflow-language &amp;&amp; ./run_test.sh --junit-xml=result.xml \
  RUNNER=../centaurCwlRunner/src/bin/centaur-cwl-runner.bash) || /bin/true
set -e</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.junit.JUnitResultArchiver plugin="junit@1.24">
      <testResults>**/result.xml</testResults>
      <keepLongStdio>false</keepLongStdio>
      <healthScaleFactor>1.0</healthScaleFactor>
      <allowEmptyResults>false</allowEmptyResults>
    </hudson.tasks.junit.JUnitResultArchiver>
  </publishers>
  <buildWrappers/>
</project>