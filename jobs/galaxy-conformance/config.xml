<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Galaxy Conformance Tests</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>10</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty plugin="build-failure-analyzer@1.20.0">
      <doNotScan>false</doNotScan>
    </com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.29.3">
      <projectUrl>https://github.com/common-workflow-language/galaxy/</projectUrl>
      <displayName></displayName>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.29">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.9.1">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://github.com/common-workflow-language/galaxy.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>cwl-1.0</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <assignedNode>linux</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.SCMTrigger>
      <spec>@daily</spec>
      <ignorePostCommitHooks>false</ignorePostCommitHooks>
    </hudson.triggers.SCMTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>### Editing this command? Also update https://ci.commonwl.org/job/cwl-spec-pr/configure

cloneorpull() {
        if test -d $1 ; then
        		rm -r $1 || /bin/true
        fi
        git clone $2
}
venv() {
        if ! test -d $1 ; then
                virtualenv $1
        fi
        . $1/bin/activate
}
# hack for root owned files leaking from Cromwell
CWLDIR=$PWD/common-workflow-language
cloneorpull common-workflow-language https://github.com/common-workflow-language/common-workflow-language.git
venv venv
(. venv/bin/activate &amp;&amp; pip install -U setuptools wheel pip)
(. venv/bin/activate &amp;&amp; pip install --ignore-installed --verbose -U cwltest cwltool)


shutdownGalaxy() {
    bash scripts/end_cwl_conformance.bash
}
trap &quot;shutdownGalaxy&quot; EXIT

START_DIR=$(pwd)
GALAXY_SKIP_CLIENT_BUILD=1 sh scripts/common_startup.sh
(. .venv/bin/activate &amp;&amp; pip install psycopg2)

bash scripts/run_for_cwl_conformance.bash
### Editing this command? Also update https://ci.commonwl.org/job/cwl-spec-pr/configure
(. venv/bin/activate &amp;&amp; cd common-workflow-language &amp;&amp; ./run_test.sh \
  --junit-xml=${START_DIR}/result.xml \
  RUNNER=${START_DIR}/scripts/cwl-runner) || /bin/true
set -e
shutdownGalaxy || /bin/true
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.junit.JUnitResultArchiver plugin="junit@1.26.1">
      <testResults>**/result.xml</testResults>
      <keepLongStdio>false</keepLongStdio>
      <healthScaleFactor>1.0</healthScaleFactor>
      <allowEmptyResults>false</allowEmptyResults>
    </hudson.tasks.junit.JUnitResultArchiver>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper plugin="ansicolor@0.5.2">
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
  </buildWrappers>
</project>